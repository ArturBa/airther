var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.996,1,0.996]],["body/components/AppComponent.html",[0,1.291,1,1.43,2,1.776,3,0.439,4,0.363,5,1.446,6,1.446,7,1.446,8,1.446,9,0.363,10,1.446,11,2.154,12,2.573,13,1.446,14,2.851,15,1.977,16,2.154,17,2.154,18,3.259,19,2.154,20,2.728,21,0.617,22,1.776,23,2.122,24,2.216,25,1.493,26,2.851,27,2.728,28,1.192,29,1.831,30,4.048,31,2.114,32,2.728,33,1.776,34,0.063,35,1.678,36,1.603,37,1.493,38,1.831,39,1.493,40,2.851,41,2.728,42,2.154,43,1.831,44,1.268,45,1.776,46,1.776,47,1.446,48,1.831,49,0.779,50,0.523,51,1.831,52,0.363,53,0.295,54,1.446,55,1.831,56,1.192,57,1.446,58,1.776,59,1.446,60,3.259,61,1.831,62,1.831,63,1.831,64,1.831,65,1.831,66,2.728,67,0.851,68,2.154,69,1.776,70,1.446,71,2.851,72,1.446,73,1.446,74,0.725,75,1.446,76,1.446,77,0.023,78,0.034,79,0.023]],["title/modules/AppModule.html",[80,0.848,81,1.377]],["body/modules/AppModule.html",[1,1.892,3,0.529,4,0.438,9,0.438,15,1.209,34,0.063,49,1.317,50,0.631,52,0.438,53,0.356,67,1.027,77,0.027,78,0.038,79,0.027,80,0.744,81,2.636,82,0.744,83,1.027,84,2.361,85,2.361,86,2.034,87,1.027,88,1.744,89,1.744,90,1.744,91,1.744,92,2.008,93,2.008,94,1.711,95,2.034,96,1.438,97,1.209,98,2.209,99,1.711,100,3.125,101,2.467,102,2.209,103,3.125,104,1.209,105,1.711,106,2.467,107,1.209,108,3.125,109,1.744,110,2.209,111,2.209,112,1.744,113,2.209]],["title/classes/AppPage.html",[53,0.405,114,1.638]],["body/classes/AppPage.html",[3,0.655,4,0.543,9,0.543,21,0.922,24,1.98,25,1.98,31,2.219,34,0.062,39,2.219,49,0.781,52,0.543,53,0.44,69,1.78,77,0.034,78,0.044,79,0.034,104,1.497,114,2.355,115,2.735,116,2.159,117,4.83,118,4.313,119,4.313,120,4.313,121,2.735,122,4.609,123,2.735,124,2.735,125,2.159,126,2.639,127,2.735,128,3.617,129,2.735]],["title/modules/AppRoutingModule.html",[80,0.848,92,1.169]],["body/modules/AppRoutingModule.html",[3,0.791,4,0.655,9,0.655,34,0.062,49,1.165,50,0.942,52,0.655,53,0.531,77,0.041,78,0.05,79,0.041,82,1.112,87,1.534,92,1.896,99,1.807,105,2.234,130,3.3,131,3.3,132,2.883,133,4.08,134,2.606,135,1.807,136,3.3]],["title/interfaces/CityLocation.html",[137,1.377,138,1.377]],["body/interfaces/CityLocation.html",[3,0.69,4,0.571,9,0.571,21,0.97,22,2.436,34,0.06,35,2.045,36,1.806,37,2.048,44,2.267,52,0.571,58,3.043,77,0.035,78,0.046,79,0.035,137,1.576,138,2.048,139,2.879,140,1.874,141,2.273,142,4.4,143,3.474,144,3.474,145,4.4]],["title/components/LocationComponent.html",[0,0.996,74,0.996]],["body/components/LocationComponent.html",[0,0.922,1,0.433,2,1.182,3,0.262,4,0.217,5,0.864,6,0.864,7,0.864,8,0.864,9,0.217,11,1.434,12,1.838,13,0.864,14,2.14,15,1.484,17,1.434,19,1.434,21,0.369,22,1.182,23,1.957,24,1.484,25,0.994,26,2.14,28,0.712,31,2.251,33,1.182,34,0.063,35,1.26,36,1.284,37,0.994,39,2.043,40,3.038,44,1.082,45,0.712,46,1.515,49,0.665,50,0.312,52,0.217,53,0.176,56,1.182,57,1.434,58,2.111,59,2.14,67,0.508,68,1.434,69,1.182,70,0.864,71,2.14,72,0.864,73,0.864,74,1.073,75,0.864,76,0.864,77,0.013,78,0.022,79,0.013,107,0.599,126,2.111,135,1.646,143,1.434,144,2.14,146,0.864,147,2.328,148,1.816,149,3.006,150,3.006,151,2.946,152,2.71,153,1.816,154,2.71,155,2.71,156,2.71,157,2.71,158,2.71,159,1.816,160,3.242,161,1.816,162,2.328,163,1.094,164,1.484,165,1.816,166,1.816,167,1.094,168,2.328,169,1.094,170,1.094,171,1.816,172,1.094,173,1.094,174,3.006,175,1.094,176,1.094,177,2.71,178,1.094,179,1.838,180,2.71,181,1.094,182,1.094,183,2.71,184,1.094,185,3.006,186,1.816,187,1.094,188,1.094,189,1.515,190,1.094,191,1.094,192,1.094,193,1.182,194,1.094,195,1.094,196,1.094,197,1.094,198,1.094,199,1.094,200,1.816,201,1.816,202,1.094,203,3.006,204,1.094,205,1.094,206,1.094,207,1.094,208,1.094,209,1.816,210,1.094,211,1.094,212,1.094,213,1.094,214,1.094,215,1.094,216,1.094,217,1.094,218,1.094,219,1.094,220,1.094,221,1.094,222,1.094,223,1.094,224,1.094,225,1.816,226,1.816]],["title/modules/LocationModule.html",[80,0.848,93,1.169]],["body/modules/LocationModule.html",[3,0.619,4,0.513,9,0.513,34,0.062,49,1.257,50,0.738,52,0.513,53,0.416,67,1.201,74,1.942,77,0.032,78,0.043,79,0.032,80,0.871,82,0.871,83,1.201,84,2.565,85,1.682,86,1.682,87,1.831,93,2.219,94,1.796,95,2.267,96,1.682,97,1.414,99,1.907,105,1.907,106,2.75,107,1.414,112,2.04,227,2.04,228,2.04,229,2.584,230,2.04,231,2.584,232,3.483,233,2.04,234,2.584,235,3.483]],["title/injectables/OpenWeatherService.html",[164,1.377,236,1.377]],["body/injectables/OpenWeatherService.html",[3,0.499,4,0.413,9,0.413,16,1.644,21,0.702,23,2.842,25,1.64,28,1.355,31,1.922,33,2.285,34,0.063,35,2.076,36,1.39,37,1.922,39,1.922,44,2.196,49,1.161,50,0.594,52,0.413,53,0.335,54,1.644,77,0.026,78,0.037,79,0.026,109,1.644,126,1.95,138,1.64,140,2.499,151,2.771,164,1.64,236,1.64,237,2.082,238,1.644,239,2.996,240,2.996,241,2.082,242,4.236,243,2.082,244,2.996,245,3.51,246,2.082,247,2.996,248,2.082,249,2.996,250,2.996,251,2.996,252,2.082,253,3.51,254,1.644,255,1.355,256,2.082,257,2.082,258,2.082,259,2.082,260,2.082,261,2.082,262,2.082,263,2.082,264,2.082,265,2.082]],["title/modules/PrimeModule.html",[80,0.848,94,0.996]],["body/modules/PrimeModule.html",[3,0.803,4,0.665,9,0.665,34,0.062,49,1.176,50,0.957,52,0.665,53,0.54,77,0.041,78,0.051,79,0.041,82,1.129,87,1.558,94,1.631,99,1.835,105,2.255,135,1.835,266,2.181,267,3.252,268,3.351,269,2.902]],["title/coverage.html",[270,2.701]],["body/coverage.html",[0,1.354,1,0.996,9,0.499,10,1.985,34,0.061,36,0.996,53,0.405,74,0.996,77,0.031,78,0.042,79,0.031,114,1.637,116,1.985,137,1.376,138,1.376,140,2.226,141,1.985,146,1.985,164,1.376,189,1.637,193,3.179,236,1.376,238,1.985,255,1.637,266,1.637,269,1.637,270,1.985,271,2.514,272,2.514,273,2.514,274,2.699,275,4.748,276,1.985,277,4.748,278,1.985,279,2.514,280,3.419,281,2.514,282,2.514,283,1.985,284,2.514,285,2.514,286,1.985,287,2.699,288,1.985,289,1.985,290,1.985,291,2.699,292,1.985,293,1.985,294,2.514,295,2.514]],["title/dependencies.html",[83,1.405,296,2.108]],["body/dependencies.html",[34,0.063,50,0.884,77,0.038,78,0.048,79,0.038,83,1.44,101,3.096,104,2.147,107,1.696,134,2.445,233,2.445,254,2.445,297,3.097,298,4.898,299,3.097,300,3.097,301,3.097,302,3.921,303,3.097,304,3.097,305,3.097,306,3.097,307,3.097,308,3.097,309,3.097,310,3.097]],["title/index.html",[21,0.71,311,2.108,312,2.108]],["body/index.html",[0,1.538,4,0.499,15,1.376,34,0.042,35,1.169,77,0.031,78,0.042,79,0.031,97,1.376,125,1.985,179,1.985,189,1.637,313,2.514,314,3.419,315,2.514,316,3.885,317,3.885,318,2.514,319,2.514,320,2.514,321,3.419,322,4.36,323,4.602,324,2.514,325,2.514,326,2.514,327,2.514,328,2.514,329,2.514,330,2.514,331,2.514,332,2.514,333,2.514,334,3.885,335,3.885,336,2.514,337,4.36,338,2.514,339,2.514,340,2.514,341,2.514,342,2.514,343,2.514,344,1.985,345,3.419,346,3.419,347,4.169,348,2.514,349,3.419,350,3.419,351,2.514,352,4.169,353,2.514,354,2.514,355,3.885,356,2.514,357,2.514,358,1.637,359,2.514,360,2.514,361,2.514]],["title/modules.html",[82,1.153]],["body/modules.html",[34,0.052,77,0.044,78,0.052,79,0.044,81,1.944,82,1.197,92,1.651,93,1.651,94,1.406,104,2.335,362,4.266,363,4.266,364,4.743,365,4.266,366,4.266]],["title/overview.html",[358,2.227]],["body/overview.html",[1,1.854,2,1.751,34,0.06,53,0.433,67,1.25,74,1.854,77,0.033,78,0.044,79,0.033,80,0.907,81,2.684,82,0.907,83,1.25,84,1.751,85,1.751,86,1.751,87,1.25,88,2.124,89,2.124,90,2.124,91,2.124,92,1.869,93,2.21,94,1.697,95,2.329,96,1.751,97,1.473,137,1.473,193,1.751,227,2.124,228,2.124,230,2.124,236,1.473,358,1.751,367,2.69,368,2.69,369,4.02]],["title/routes.html",[132,2.227]],["body/routes.html",[34,0.056,77,0.048,78,0.056,79,0.048,132,2.562]],["title/miscellaneous/variables.html",[370,1.664,371,2.386]],["body/miscellaneous/variables.html",[21,0.718,24,1.166,34,0.063,36,1.78,42,1.681,44,0.99,45,2.925,46,2.925,47,3.063,52,0.423,56,2.314,77,0.026,78,0.037,79,0.026,135,1.166,255,1.982,266,1.386,267,1.681,269,1.982,274,2.806,276,2.404,278,2.404,283,1.681,286,2.404,287,3.24,288,1.681,289,1.681,290,2.806,291,1.681,292,2.404,293,2.404,344,2.806,370,1.681,371,1.681,372,2.129,373,3.045,374,2.129,375,2.129,376,2.129,377,2.129,378,2.129,379,2.129,380,3.554,381,2.129,382,2.129,383,2.129,384,2.129,385,2.129,386,2.129,387,2.129,388,2.129,389,3.554,390,3.554,391,2.129,392,2.129,393,2.129]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":193,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.2",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":369,"title":{},"body":{"overview.html":{}}}],["1/14",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":226,"title":{},"body":{"components/LocationComponent.html":{}}}],["11.0.0",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":319,"title":{},"body":{"index.html":{}}}],["11.3.1",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":368,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":367,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["actual_component",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["address",{"_index":245,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["address.replace('{city",{"_index":264,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["air",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airther",{"_index":313,"title":{},"body":{"index.html":{}}}],["angular",{"_index":316,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":233,"title":{},"body":{"modules/LocationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/OpenWeatherService.html":{}}}],["angular/compiler",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":250,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["api_url",{"_index":255,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url.location",{"_index":263,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["apikey",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LocationComponent.html":{},"index.html":{}}}],["app.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LocationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":81,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":114,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":92,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":338,"title":{},"body":{"index.html":{}}}],["async",{"_index":117,"title":{},"body":{"classes/AppPage.html":{}}}],["automatically",{"_index":328,"title":{},"body":{"index.html":{}}}],["available",{"_index":366,"title":{},"body":{"modules.html":{}}}],["boolean",{"_index":177,"title":{},"body":{"components/LocationComponent.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["browse",{"_index":364,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":127,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":337,"title":{},"body":{"index.html":{}}}],["cardmodule",{"_index":267,"title":{},"body":{"modules/PrimeModule.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":330,"title":{},"body":{"index.html":{}}}],["check",{"_index":179,"title":{},"body":{"components/LocationComponent.html":{},"index.html":{}}}],["city",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["city.tostring",{"_index":265,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["citydata",{"_index":160,"title":{},"body":{"components/LocationComponent.html":{}}}],["citylocation",{"_index":138,"title":{"interfaces/CityLocation.html":{}},"body":{"interfaces/CityLocation.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["class",{"_index":53,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/AppPage.html":{}}}],["clearerror",{"_index":152,"title":{},"body":{"components/LocationComponent.html":{}}}],["cli",{"_index":317,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":227,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declarations",{"_index":228,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":230,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":229,"title":{},"body":{"modules/LocationModule.html":{}}}],["code",{"_index":332,"title":{},"body":{"index.html":{}}}],["command",{"_index":359,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":232,"title":{},"body":{"modules/LocationModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LocationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"overview.html":{}}}],["config.index.ts",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LocationComponent.html":{},"modules/PrimeModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["constructor(httpclient",{"_index":241,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["constructor(owservice",{"_index":163,"title":{},"body":{"components/LocationComponent.html":{}}}],["constructor(primengconfig",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["constructor(protected",{"_index":190,"title":{},"body":{"components/LocationComponent.html":{}}}],["context",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":142,"title":{},"body":{"interfaces/CityLocation.html":{}}}],["coverage",{"_index":270,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":216,"title":{},"body":{"components/LocationComponent.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["decline",{"_index":202,"title":{},"body":{"components/LocationComponent.html":{}}}],["declined",{"_index":205,"title":{},"body":{"components/LocationComponent.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["dependencies",{"_index":83,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":252,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["dev",{"_index":325,"title":{},"body":{"index.html":{}}}],["development",{"_index":320,"title":{},"body":{"index.html":{}}}],["directive",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["directives",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":336,"title":{},"body":{"index.html":{}}}],["directory",{"_index":341,"title":{},"body":{"index.html":{}}}],["dist",{"_index":340,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["dynamic",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":353,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":116,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":123,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":124,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":121,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/LocationComponent.html":{}}}],["element(by.css('app",{"_index":128,"title":{},"body":{"classes/AppPage.html":{}}}],["emitlocation",{"_index":153,"title":{},"body":{"components/LocationComponent.html":{}}}],["emitlocation(latitude",{"_index":171,"title":{},"body":{"components/LocationComponent.html":{}}}],["empty",{"_index":180,"title":{},"body":{"components/LocationComponent.html":{}}}],["end",{"_index":352,"title":{},"body":{"index.html":{}}}],["entercity",{"_index":239,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["entercity(city",{"_index":244,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["envconfigfile",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.weatherapi.apikey",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":214,"title":{},"body":{"components/LocationComponent.html":{}}}],["errormsg",{"_index":149,"title":{},"body":{"components/LocationComponent.html":{}}}],["eventemitter",{"_index":168,"title":{},"body":{"components/LocationComponent.html":{}}}],["exclude=minutely,daily,alerts&units=metric&appid",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":349,"title":{},"body":{"index.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{},"overview.html":{}}}],["false",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{}}}],["files",{"_index":331,"title":{},"body":{"index.html":{}}}],["flag",{"_index":343,"title":{},"body":{"index.html":{}}}],["font",{"_index":219,"title":{},"body":{"components/LocationComponent.html":{}}}],["form",{"_index":150,"title":{},"body":{"components/LocationComponent.html":{}}}],["formcontrol",{"_index":174,"title":{},"body":{"components/LocationComponent.html":{}}}],["formgroup",{"_index":183,"title":{},"body":{"components/LocationComponent.html":{}}}],["formsmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{}}}],["found",{"_index":215,"title":{},"body":{"components/LocationComponent.html":{}}}],["further",{"_index":354,"title":{},"body":{"index.html":{}}}],["generate",{"_index":334,"title":{},"body":{"index.html":{}}}],["generated",{"_index":315,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":206,"title":{},"body":{"components/LocationComponent.html":{}}}],["getcityform",{"_index":154,"title":{},"body":{"components/LocationComponent.html":{}}}],["getlocation",{"_index":240,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getlocation(city",{"_index":247,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["getlocationcomponent",{"_index":118,"title":{},"body":{"classes/AppPage.html":{}}}],["getlocationinput",{"_index":119,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":311,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":155,"title":{},"body":{"components/LocationComponent.html":{}}}],["go",{"_index":357,"title":{},"body":{"index.html":{}}}],["graph",{"_index":365,"title":{},"body":{"modules.html":{}}}],["help",{"_index":355,"title":{},"body":{"index.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["http://api.openweathermap.org/data/2.5/air_pollution/forecast",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://api.openweathermap.org/geo/1.0/direct?q={city",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":327,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":242,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["httpclientmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":223,"title":{},"body":{"components/LocationComponent.html":{}}}],["identifier",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{}}}],["imports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{}}}],["injectable",{"_index":236,"title":{"injectables/OpenWeatherService.html":{}},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":237,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["input",{"_index":185,"title":{},"body":{"components/LocationComponent.html":{}}}],["input')).getattribute('placeholder",{"_index":129,"title":{},"body":{"classes/AppPage.html":{}}}],["inputs",{"_index":159,"title":{},"body":{"components/LocationComponent.html":{}}}],["interface",{"_index":137,"title":{"interfaces/CityLocation.html":{}},"body":{"interfaces/CityLocation.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":139,"title":{},"body":{"interfaces/CityLocation.html":{}}}],["iscitydataempty",{"_index":156,"title":{},"body":{"components/LocationComponent.html":{}}}],["isformempty",{"_index":157,"title":{},"body":{"components/LocationComponent.html":{}}}],["json",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["karma",{"_index":351,"title":{},"body":{"index.html":{}}}],["larger",{"_index":221,"title":{},"body":{"components/LocationComponent.html":{}}}],["lat",{"_index":143,"title":{},"body":{"interfaces/CityLocation.html":{},"components/LocationComponent.html":{}}}],["lat={lat}&lon={lon}&appid",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latitude",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["literal",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/LocationComponent.html":{},"miscellaneous/variables.html":{}}}],["location.component",{"_index":234,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.component.html",{"_index":148,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.component.scss",{"_index":147,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.latitude",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["location/location.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["location[0].lat",{"_index":212,"title":{},"body":{"components/LocationComponent.html":{}}}],["location[0].lon",{"_index":213,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcomponent",{"_index":74,"title":{"components/LocationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["locationevent",{"_index":162,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationmodule",{"_index":93,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["lon",{"_index":144,"title":{},"body":{"interfaces/CityLocation.html":{},"components/LocationComponent.html":{}}}],["longitude",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["matching",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["miscellaneous",{"_index":370,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":80,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["modules",{"_index":82,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":356,"title":{},"body":{"index.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{},"index.html":{}}}],["name}&limit=1&appid",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":326,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":120,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.geolocation",{"_index":195,"title":{},"body":{"components/LocationComponent.html":{}}}],["navigator.geolocation.getcurrentposition",{"_index":196,"title":{},"body":{"components/LocationComponent.html":{}}}],["new",{"_index":189,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":323,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["number",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{}}}],["object",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":253,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["onsubmit",{"_index":158,"title":{},"body":{"components/LocationComponent.html":{}}}],["open",{"_index":257,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["openweather",{"_index":249,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["openweatherservice",{"_index":164,"title":{"injectables/OpenWeatherService.html":{}},"body":{"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":186,"title":{},"body":{"components/LocationComponent.html":{}}}],["outputs",{"_index":161,"title":{},"body":{"components/LocationComponent.html":{}}}],["overview",{"_index":358,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owservice",{"_index":166,"title":{},"body":{"components/LocationComponent.html":{}}}],["p",{"_index":222,"title":{},"body":{"components/LocationComponent.html":{}}}],["package",{"_index":296,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":361,"title":{},"body":{"index.html":{}}}],["param",{"_index":260,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["permission",{"_index":204,"title":{},"body":{"components/LocationComponent.html":{}}}],["please",{"_index":209,"title":{},"body":{"components/LocationComponent.html":{}}}],["position",{"_index":197,"title":{},"body":{"components/LocationComponent.html":{}}}],["position.coords.latitude",{"_index":198,"title":{},"body":{"components/LocationComponent.html":{}}}],["position.coords.longitude",{"_index":199,"title":{},"body":{"components/LocationComponent.html":{}}}],["prime.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{}}}],["prime_imports",{"_index":269,"title":{},"body":{"modules/PrimeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["primeflex",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["primemodule",{"_index":94,"title":{"modules/PrimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules/PrimeModule.html":{},"modules.html":{},"overview.html":{}}}],["primeng",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/card",{"_index":268,"title":{},"body":{"modules/PrimeModule.html":{}}}],["primengconfig",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["process.env.weather_api_key",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":342,"title":{},"body":{"index.html":{}}}],["production",{"_index":344,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":314,"title":{},"body":{"index.html":{}}}],["promise",{"_index":122,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{}}}],["protected",{"_index":151,"title":{},"body":{"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["protractor",{"_index":125,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":259,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":235,"title":{},"body":{"modules/LocationModule.html":{}}}],["reference",{"_index":360,"title":{},"body":{"index.html":{}}}],["reload",{"_index":329,"title":{},"body":{"index.html":{}}}],["remove",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["require",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}],["result",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":126,"title":{},"body":{"classes/AppPage.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["right",{"_index":224,"title":{},"body":{"components/LocationComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenWeatherService.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["routermodule",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":132,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":322,"title":{},"body":{"index.html":{}}}],["running",{"_index":345,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":254,"title":{},"body":{"injectables/OpenWeatherService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":333,"title":{},"body":{"index.html":{}}}],["secrets",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["serve",{"_index":324,"title":{},"body":{"index.html":{}}}],["server",{"_index":321,"title":{},"body":{"index.html":{}}}],["services/open",{"_index":187,"title":{},"body":{"components/LocationComponent.html":{}}}],["size",{"_index":220,"title":{},"body":{"components/LocationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/OpenWeatherService.html":{},"modules/PrimeModule.html":{},"index.html":{}}}],["spec\\.ts",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prime.module.ts",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secrets.environment.ts",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../url.ts",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/location/location.component.ts",{"_index":146,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["src/app/location/location.component.ts:12",{"_index":169,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:13",{"_index":167,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:15",{"_index":184,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:16",{"_index":165,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:20",{"_index":181,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:30",{"_index":178,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:34",{"_index":176,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:38",{"_index":175,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:57",{"_index":182,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:78",{"_index":173,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:82",{"_index":170,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.component.ts:86",{"_index":172,"title":{},"body":{"components/LocationComponent.html":{}}}],["src/app/location/location.module.ts",{"_index":231,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/prime.module.ts",{"_index":266,"title":{},"body":{"modules/PrimeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/open",{"_index":140,"title":{},"body":{"interfaces/CityLocation.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["src/app/services/url.ts",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/secrets.environment.ts",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":251,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["started",{"_index":312,"title":{"index.html":{}},"body":{}}],["state",{"_index":145,"title":{},"body":{"interfaces/CityLocation.html":{}}}],["statements",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":339,"title":{},"body":{"index.html":{}}}],["string",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["support",{"_index":362,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":207,"title":{},"body":{"components/LocationComponent.html":{}}}],["svg",{"_index":363,"title":{},"body":{"modules.html":{}}}],["table",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["targetpath",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["test",{"_index":348,"title":{},"body":{"index.html":{}}}],["tests",{"_index":347,"title":{},"body":{"index.html":{}}}],["this.city",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["this.citydata.length",{"_index":194,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.clearerror",{"_index":200,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.emitlocation(lat",{"_index":201,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.entercity(city",{"_index":262,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.errormsg",{"_index":203,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.form",{"_index":191,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.form.get('city",{"_index":217,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.getcityform().value",{"_index":210,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.getcityform().value.length",{"_index":192,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.httpclient.get",{"_index":261,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["this.isformempty",{"_index":208,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.location",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["this.locationevent.emit",{"_index":218,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.owservice.getlocation(city).subscribe",{"_index":211,"title":{},"body":{"components/LocationComponent.html":{}}}],["this.primengconfig.ripple",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["true",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CityLocation.html":{},"components/LocationComponent.html":{},"injectables/OpenWeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":346,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["updatelocation",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["updatelocation(location",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["url",{"_index":256,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["use",{"_index":335,"title":{},"body":{"index.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["variable",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":371,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":318,"title":{},"body":{"index.html":{}}}],["via",{"_index":350,"title":{},"body":{"index.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/LocationComponent.html":{}}}],["weather",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather.model",{"_index":258,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.model.ts",{"_index":141,"title":{},"body":{"interfaces/CityLocation.html":{},"coverage.html":{}}}],["weather.service",{"_index":188,"title":{},"body":{"components/LocationComponent.html":{}}}],["weather.service.ts",{"_index":238,"title":{},"body":{"injectables/OpenWeatherService.html":{},"coverage.html":{}}}],["weather.service.ts:11",{"_index":243,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:19",{"_index":248,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weather.service.ts:25",{"_index":246,"title":{},"body":{"injectables/OpenWeatherService.html":{}}}],["weatherapi",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":225,"title":{},"body":{"components/LocationComponent.html":{}}}],["zone.js",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation(location: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  location = {};\n  city = '';\n  constructor(private primengConfig: PrimeNGConfig) {}\n\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n  }\n\n  updateLocation(location: { latitude: number; longitude: number }): void {\n    this.location = location;\n    // TODO: remove\n    this.city = (location.latitude as unknown) as string;\n  }\n}\n\n    \n\n    \n        \n\n\n{{ this.location | json }}\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.location | json }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LocationComponent', 'selector': 'app-location'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nPrimeModule\n\nPrimeModule\n\nAppModule -->\n\nPrimeModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            PrimeModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PrimeModule } from './prime.module';\nimport { LocationModule } from './location/location.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    PrimeModule,\n    FormsModule,\n    HttpClientModule,\n\n    LocationModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLocationComponent\n                            \n                            \n                                    Async\n                                getLocationInput\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLocationComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocationComponent()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLocationInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocationInput()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getLocationComponent(): Promise {\n    return element(by.css('app-location'));\n  }\n\n  async getLocationInput(): Promise {\n    return element(by.css('app-location input')).getAttribute('placeholder');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityLocation.html":{"url":"interfaces/CityLocation.html","title":"interface - CityLocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityLocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/open-weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CityLocation {\n  name: string;\n  lat: number;\n  lon: number;\n  country: string;\n  state?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/location/location.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-location\n            \n\n            \n                styleUrls\n                ./location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMsg\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                clearError\n                            \n                            \n                                    Protected\n                                emitLocation\n                            \n                            \n                                    Protected\n                                getCityForm\n                            \n                            \n                                getUserLocation\n                            \n                            \n                                isCityDataEmpty\n                            \n                            \n                                isFormEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cityData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                locationEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(owService: OpenWeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        owService\n                                                  \n                                                        \n                                                                        OpenWeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cityData\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/location/location.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        locationEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/location/location.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            clearError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            emitLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitLocation(latitude: number, longitude: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    longitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getCityForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormControl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCityDataEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisCityDataEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFormEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisFormEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:30\n                \n            \n\n\n            \n                \n                    Check if form value is empty\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Return true if empty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/location/location.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { OpenWeatherService } from '../services/open-weather.service';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.scss'],\n})\nexport class LocationComponent implements OnInit {\n  @Output() locationEvent = new EventEmitter();\n  @Input() cityData: string;\n\n  form: FormGroup;\n  errorMsg = '';\n\n  constructor(protected owService: OpenWeatherService) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      city: new FormControl(''),\n    });\n  }\n\n  /**\n   * Check if form value is empty\n   * @returns Return true if empty\n   */\n  isFormEmpty(): boolean {\n    return this.getCityForm().value.length === 0;\n  }\n\n  isCityDataEmpty(): boolean {\n    return this.cityData.length === 0;\n  }\n\n  getUserLocation(): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n\n          this.clearError();\n          this.emitLocation(lat, lon);\n        },\n        (decline) => {\n          this.errorMsg = 'Permission declined';\n        }\n      );\n    } else {\n      this.errorMsg = 'Geolocation is not supported';\n    }\n  }\n\n  onSubmit(): void {\n    if (this.isFormEmpty()) {\n      this.errorMsg = 'Please input the city';\n      return;\n    }\n    const city = this.getCityForm().value;\n    this.owService.getLocation(city).subscribe(\n      (location) => {\n        const lat = location[0].lat;\n        const lon = location[0].lon;\n\n        this.clearError();\n        this.emitLocation(lat, lon);\n      },\n      (err) => {\n        this.errorMsg =\n          'Please check the city. Cannot found data for this city';\n      }\n    );\n  }\n\n  protected getCityForm(): FormControl {\n    return this.form.get('city') as FormControl;\n  }\n\n  protected clearError(): void {\n    this.errorMsg = '';\n  }\n\n  protected emitLocation(latitude: number, longitude: number): void {\n    this.locationEvent.emit({ latitude, longitude });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ cityData }}\n    \n    \n      \n        \n          \n          \n          \n        \n        \n          {{ errorMsg }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./location.component.scss\n                \n                #cityData {\n  font-size: larger;\n}\n\n.p-input-icon-right {\n  width: 100%;\n}\n\ninput {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ cityData }}                                                                              {{ errorMsg }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LocationComponent', 'selector': 'app-location'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\n\nLocationComponent\n\nLocationComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nLocationComponent \n\nLocationComponent \n\nLocationComponent  -->\n\nLocationModule->LocationComponent \n\n\n\n\n\nPrimeModule\n\nPrimeModule\n\nLocationModule -->\n\nPrimeModule->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrimeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocationComponent } from './location.component';\n\nimport { PrimeModule } from '../prime.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LocationComponent],\n  imports: [CommonModule, PrimeModule, FormsModule, ReactiveFormsModule],\n  exports: [LocationComponent],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenWeatherService.html":{"url":"injectables/OpenWeatherService.html","title":"injectable - OpenWeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OpenWeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/open-weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                enterCity\n                            \n                            \n                                getLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/open-weather.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enterCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enterCity(City: string, address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/open-weather.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    City\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/open-weather.service.ts:19\n                \n            \n\n\n            \n                \n                    Get city in openweather api standard by his name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        city name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API_URL } from './URL';\n\nimport { CityLocation } from './open-weather.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenWeatherService {\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Get city in openweather api standard by his name\n   * @param city {string} city name\n   * @returns {CityLocation}\n   */\n  getLocation(city: string): Observable {\n    return this.httpClient.get(\n      this.enterCity(city, API_URL.location)\n    );\n  }\n\n  protected enterCity(City: string, address: string): string {\n    return address.replace('{city name}', City.toString());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrimeModule.html":{"url":"modules/PrimeModule.html","title":"module - PrimeModule","body":"\n                   \n\n\n\n\n    Modules\n    PrimeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/prime.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { CardModule } from 'primeng/card';\n\nconst PRIME_IMPORTS = [CardModule];\n\n@NgModule({\n  imports: [PRIME_IMPORTS],\n  exports: [PRIME_IMPORTS],\n})\nexport class PrimeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config.index.ts\n            \n            variable\n            envConfigFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config.index.ts\n            \n            variable\n            targetPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/location/location.component.ts\n            \n            component\n            LocationComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/prime.module.ts\n            \n            variable\n            PRIME_IMPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/URL.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/open-weather.model.ts\n            \n            interface\n            CityLocation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/open-weather.service.ts\n            \n            injectable\n            OpenWeatherService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/secrets.environment.ts\n            \n            variable\n            secrets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAirther\nThis project was generated with Angular CLI version 11.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrimeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nLocationComponent \n\nLocationComponent \n\nLocationComponent  -->\n\nLocationModule->LocationComponent \n\n\n\n\n\nPrimeModule\n\nPrimeModule\n\nAppModule -->\n\nPrimeModule->AppModule\n\n\n\nLocationModule -->\n\nPrimeModule->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../URL.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            envConfigFile   (config.index.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PRIME_IMPORTS   (src/.../prime.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            secrets   (src/.../secrets.environment.ts)\n                        \n                        \n                            targetPath   (config.index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/URL.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  location:\n    'http://api.openweathermap.org/geo/1.0/direct?q={city name}&limit=1&appid=' +\n    environment.weatherapi.apiKey,\n  weather:\n    'http://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}' +\n    '&exclude=minutely,daily,alerts&units=metric&appid=' +\n    environment.weatherapi.apiKey,\n  air:\n    'http://api.openweathermap.org/data/2.5/air_pollution/forecast?' +\n    'lat={lat}&lon={lon}&appid=' +\n    environment.weatherapi.apiKey,\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    config.index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envConfigFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `export const environment = {\n   production: true,\n   weatherapi: {\n        apiKey: '${process.env.WEATHER_API_KEY}'\n    }\n};\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : './src/environments/environment.prod.ts'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  weatherapi: {\n    apiKey: 'undefined',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ...secrets,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/prime.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PRIME_IMPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CardModule]\n                        \n                    \n\n\n            \n        \n\n    src/environments/secrets.environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            secrets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  weatherapi: {\n    apiKey: '',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
